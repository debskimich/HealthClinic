// <auto-generated />
using System;
using HealthClinic.DAL.Contexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace HealthClinic.DAL.Migrations
{
    [DbContext(typeof(HealthcareContext))]
    [Migration("20210524200442_Add-seed-data")]
    partial class Addseeddata
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.3")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("HealthClinic.BLL.Models.Doctor", b =>
                {
                    b.Property<int>("IdDoctor")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdDoctor");

                    b.ToTable("Doctors");

                    b.HasData(
                        new
                        {
                            IdDoctor = 1,
                            Email = "malewski@wp.pl",
                            FirstName = "Andrzej",
                            LastName = "Malewski"
                        },
                        new
                        {
                            IdDoctor = 2,
                            Email = "moleda@wp.pl",
                            FirstName = "Marcin",
                            LastName = "Malędowski"
                        },
                        new
                        {
                            IdDoctor = 3,
                            Email = "kowalewicz@wp.pl",
                            FirstName = "Krzysztof",
                            LastName = "Kowalewicz"
                        });
                });

            modelBuilder.Entity("HealthClinic.BLL.Models.Medicament", b =>
                {
                    b.Property<int>("IdMedicament")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdMedicament");

                    b.ToTable("Medicaments");

                    b.HasData(
                        new
                        {
                            IdMedicament = 1,
                            Description = "Lorem ipsum...",
                            Name = "Xanax",
                            Type = "Depression"
                        },
                        new
                        {
                            IdMedicament = 2,
                            Description = "Lorem",
                            Name = "Abilify",
                            Type = "Tabletki"
                        },
                        new
                        {
                            IdMedicament = 3,
                            Description = "Lorem ips",
                            Name = "Abra",
                            Type = "Żel"
                        });
                });

            modelBuilder.Entity("HealthClinic.BLL.Models.Patient", b =>
                {
                    b.Property<int>("IdPatient")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Birthdate")
                        .HasColumnType("datetime2");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdPatient");

                    b.ToTable("Patients");

                    b.HasData(
                        new
                        {
                            IdPatient = 1,
                            Birthdate = new DateTime(2021, 5, 24, 22, 4, 42, 337, DateTimeKind.Local).AddTicks(9347),
                            FirstName = "Jan",
                            LastName = "Andrzejewski"
                        },
                        new
                        {
                            IdPatient = 2,
                            Birthdate = new DateTime(2021, 5, 24, 22, 4, 42, 340, DateTimeKind.Local).AddTicks(5365),
                            FirstName = "Krzysztof",
                            LastName = "Kowalewicz"
                        },
                        new
                        {
                            IdPatient = 3,
                            Birthdate = new DateTime(2021, 5, 24, 22, 4, 42, 340, DateTimeKind.Local).AddTicks(5411),
                            FirstName = "Marcin",
                            LastName = "Andrzejewicz"
                        });
                });

            modelBuilder.Entity("HealthClinic.BLL.Models.Prescription", b =>
                {
                    b.Property<int>("IdPrescription")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DueDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdDoctor")
                        .HasColumnType("int");

                    b.Property<int>("IdPatient")
                        .HasColumnType("int");

                    b.HasKey("IdPrescription");

                    b.HasIndex("IdDoctor");

                    b.HasIndex("IdPatient");

                    b.ToTable("Prescriptions");

                    b.HasData(
                        new
                        {
                            IdPrescription = 1,
                            Date = new DateTime(2019, 5, 9, 9, 15, 0, 0, DateTimeKind.Unspecified),
                            DueDate = new DateTime(2020, 5, 9, 9, 15, 0, 0, DateTimeKind.Unspecified),
                            IdDoctor = 2,
                            IdPatient = 1
                        },
                        new
                        {
                            IdPrescription = 2,
                            Date = new DateTime(2009, 5, 9, 9, 15, 0, 0, DateTimeKind.Unspecified),
                            DueDate = new DateTime(2010, 5, 9, 9, 15, 0, 0, DateTimeKind.Unspecified),
                            IdDoctor = 1,
                            IdPatient = 2
                        },
                        new
                        {
                            IdPrescription = 3,
                            Date = new DateTime(2013, 5, 9, 9, 15, 0, 0, DateTimeKind.Unspecified),
                            DueDate = new DateTime(2014, 5, 9, 9, 15, 0, 0, DateTimeKind.Unspecified),
                            IdDoctor = 3,
                            IdPatient = 3
                        });
                });

            modelBuilder.Entity("HealthClinic.BLL.Models.PrescriptionMedicament", b =>
                {
                    b.Property<int>("IdPrescriptionMedicament")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Details")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Dose")
                        .HasColumnType("int");

                    b.Property<int>("IdMedicament")
                        .HasColumnType("int");

                    b.Property<int>("IdPrescription")
                        .HasColumnType("int");

                    b.HasKey("IdPrescriptionMedicament");

                    b.HasIndex("IdMedicament");

                    b.HasIndex("IdPrescription");

                    b.ToTable("PrescriptionMedicaments");

                    b.HasData(
                        new
                        {
                            IdPrescriptionMedicament = 1,
                            Details = "Take every morning",
                            Dose = 4,
                            IdMedicament = 1,
                            IdPrescription = 1
                        },
                        new
                        {
                            IdPrescriptionMedicament = 2,
                            Details = "Once a week",
                            Dose = 1,
                            IdMedicament = 1,
                            IdPrescription = 2
                        },
                        new
                        {
                            IdPrescriptionMedicament = 3,
                            Details = "once every two weeks",
                            Dose = 3,
                            IdMedicament = 1,
                            IdPrescription = 3
                        });
                });

            modelBuilder.Entity("HealthClinic.BLL.Models.Prescription", b =>
                {
                    b.HasOne("HealthClinic.BLL.Models.Doctor", "IdDoctorNavigation")
                        .WithMany("Prescriptions")
                        .HasForeignKey("IdDoctor")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HealthClinic.BLL.Models.Patient", "IdPatientNavigation")
                        .WithMany("Prescriptions")
                        .HasForeignKey("IdPatient")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("IdDoctorNavigation");

                    b.Navigation("IdPatientNavigation");
                });

            modelBuilder.Entity("HealthClinic.BLL.Models.PrescriptionMedicament", b =>
                {
                    b.HasOne("HealthClinic.BLL.Models.Medicament", "IdMedicamentNavigation")
                        .WithMany("PrescriptionMedicaments")
                        .HasForeignKey("IdMedicament")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HealthClinic.BLL.Models.Prescription", "IdPrescriptionNavigation")
                        .WithMany("PrescriptionMedicaments")
                        .HasForeignKey("IdPrescription")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("IdMedicamentNavigation");

                    b.Navigation("IdPrescriptionNavigation");
                });

            modelBuilder.Entity("HealthClinic.BLL.Models.Doctor", b =>
                {
                    b.Navigation("Prescriptions");
                });

            modelBuilder.Entity("HealthClinic.BLL.Models.Medicament", b =>
                {
                    b.Navigation("PrescriptionMedicaments");
                });

            modelBuilder.Entity("HealthClinic.BLL.Models.Patient", b =>
                {
                    b.Navigation("Prescriptions");
                });

            modelBuilder.Entity("HealthClinic.BLL.Models.Prescription", b =>
                {
                    b.Navigation("PrescriptionMedicaments");
                });
#pragma warning restore 612, 618
        }
    }
}
